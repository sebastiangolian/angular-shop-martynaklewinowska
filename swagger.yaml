swagger: "2.0"
info:
  description: "Sklep MK"
  version: "1.0.0"
  title: "Sklep MK"
host: "mk.pl"
basePath: "/api"
schemes:
- "https"
- "http"
paths:
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
definitions:
  User:
    type: "object"
    properties:
      login:
        type: "string"
      password:
        type: "string"
  Api:
    type: "object"
    properties:
      item:
        type: "array"
      bussinesLogic:
        type: "array"
        $ref: "#/definitions/ApiBussinesLogic"
  ApiList:
    type: "object"
    properties:
      items:
        type: "array"
      total:
        type: "number"
      bussinesLogic:
        type: "array"
        $ref: "#/definitions/ApiBussinesLogic"
  ApiBussinesLogic:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/ApiError"
  ApiError:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"